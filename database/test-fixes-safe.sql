-- Test de V√©rification des Corrections MindEase AI (Version S√©curis√©e)
-- =====================================================================

-- Ce script teste les corrections sans cr√©er de donn√©es test
-- Compatible avec les contraintes de cl√©s √©trang√®res Supabase

BEGIN;

DO $$
BEGIN
    RAISE NOTICE 'üß™ Test des corrections MindEase AI (Version S√©curis√©e)';
    RAISE NOTICE '==================================================';
END $$;

-- 1. V√©rification des colonnes therapy_sessions
DO $$
BEGIN
    IF EXISTS (
        SELECT 1 FROM information_schema.columns 
        WHERE table_name = 'therapy_sessions' AND column_name = 'status'
    ) THEN
        RAISE NOTICE '‚úÖ 1.1. therapy_sessions.status - OK';
    ELSE
        RAISE EXCEPTION '‚ùå therapy_sessions.status manquante';
    END IF;
    
    IF NOT EXISTS (
        SELECT 1 FROM information_schema.columns 
        WHERE table_name = 'therapy_sessions' AND column_name = 'session_status'
    ) THEN
        RAISE NOTICE '‚úÖ 1.2. therapy_sessions.session_status correctement supprim√©e';
    ELSE
        RAISE NOTICE '‚ö†Ô∏è  therapy_sessions.session_status existe encore';
    END IF;
END $$;

-- 2. V√©rification des colonnes homework_assignments  
DO $$
BEGIN
    IF EXISTS (
        SELECT 1 FROM information_schema.columns 
        WHERE table_name = 'homework_assignments' AND column_name = 'completed'
    ) THEN
        RAISE NOTICE '‚úÖ 2.1. homework_assignments.completed - OK';
    ELSE
        RAISE EXCEPTION '‚ùå homework_assignments.completed manquante';
    END IF;
    
    IF NOT EXISTS (
        SELECT 1 FROM information_schema.columns 
        WHERE table_name = 'homework_assignments' AND column_name = 'completion_status'
    ) THEN
        RAISE NOTICE '‚úÖ 2.2. homework_assignments.completion_status correctement supprim√©e';
    ELSE
        RAISE NOTICE '‚ö†Ô∏è  homework_assignments.completion_status existe encore';
    END IF;
END $$;

-- 3. V√©rification des colonnes therapy_programs
DO $$
BEGIN
    IF EXISTS (
        SELECT 1 FROM information_schema.columns 
        WHERE table_name = 'therapy_programs' AND column_name = 'status'
    ) THEN
        RAISE NOTICE '‚úÖ 3.1. therapy_programs.status - OK';
    ELSE
        RAISE EXCEPTION '‚ùå therapy_programs.status manquante';
    END IF;
    
    IF NOT EXISTS (
        SELECT 1 FROM information_schema.columns 
        WHERE table_name = 'therapy_programs' AND column_name = 'program_status'
    ) THEN
        RAISE NOTICE '‚úÖ 3.2. therapy_programs.program_status correctement supprim√©e';
    ELSE
        RAISE NOTICE '‚ö†Ô∏è  therapy_programs.program_status existe encore';
    END IF;
END $$;

-- 4. V√©rification des colonnes user_profiles
DO $$
BEGIN
    IF NOT EXISTS (
        SELECT 1 FROM information_schema.columns 
        WHERE table_name = 'user_profiles' AND column_name = 'subscription_type'
    ) THEN
        RAISE NOTICE '‚úÖ 4.1. user_profiles.subscription_type correctement supprim√©e';
    ELSE
        RAISE NOTICE '‚ö†Ô∏è  user_profiles.subscription_type existe encore';
    END IF;
    
    IF NOT EXISTS (
        SELECT 1 FROM information_schema.columns 
        WHERE table_name = 'user_profiles' AND column_name = 'total_sessions'
    ) THEN
        RAISE NOTICE '‚úÖ 4.2. user_profiles.total_sessions correctement supprim√©e';
    ELSE
        RAISE NOTICE '‚ö†Ô∏è  user_profiles.total_sessions existe encore';
    END IF;
END $$;

-- 5. V√©rification des relations
DO $$
BEGIN
    IF EXISTS (
        SELECT 1 FROM information_schema.columns 
        WHERE table_name = 'homework_assignments' AND column_name = 'user_id'
    ) AND EXISTS (
        SELECT 1 FROM information_schema.columns 
        WHERE table_name = 'homework_assignments' AND column_name = 'therapy_session_id'
    ) THEN
        RAISE NOTICE '‚úÖ 5. homework_assignments relations - OK';
    ELSE
        RAISE EXCEPTION '‚ùå homework_assignments relations manquantes';
    END IF;
END $$;

-- 6. Test des contraintes et √©num√©rations
DO $$
BEGIN
    -- V√©rifier les types d'√©num√©ration existent
    IF EXISTS (SELECT 1 FROM pg_type WHERE typname LIKE '%status%' OR typname LIKE '%type%') THEN
        RAISE NOTICE '‚úÖ 6.1. Types d''√©num√©ration d√©tect√©s - OK';
    END IF;
    
    -- V√©rifier les contraintes de cl√©s √©trang√®res
    IF EXISTS (
        SELECT 1 FROM information_schema.table_constraints 
        WHERE constraint_type = 'FOREIGN KEY' 
        AND table_name = 'user_profiles'
    ) THEN
        RAISE NOTICE '‚úÖ 6.2. Contraintes de cl√©s √©trang√®res - OK';
    END IF;
END $$;

-- 7. Test des requ√™tes principales (sans donn√©es)
DO $$
DECLARE
    query_result INTEGER;
BEGIN
    -- Test syntaxe requ√™te therapy_programs
    BEGIN
        EXECUTE 'SELECT COUNT(*) FROM therapy_programs WHERE status = $1 LIMIT 1' INTO query_result USING 'active';
        RAISE NOTICE '‚úÖ 7.1. Requ√™te therapy_programs.status - OK';
    EXCEPTION WHEN OTHERS THEN
        RAISE NOTICE '‚ùå 7.1. Erreur therapy_programs: %', SQLERRM;
    END;
    
    -- Test syntaxe requ√™te homework_assignments
    BEGIN
        EXECUTE 'SELECT COUNT(*) FROM homework_assignments WHERE completed = $1 LIMIT 1' INTO query_result USING false;
        RAISE NOTICE '‚úÖ 7.2. Requ√™te homework_assignments.completed - OK';
    EXCEPTION WHEN OTHERS THEN
        RAISE NOTICE '‚ùå 7.2. Erreur homework_assignments: %', SQLERRM;
    END;
    
    -- Test syntaxe requ√™te therapy_sessions
    BEGIN
        EXECUTE 'SELECT COUNT(*) FROM therapy_sessions WHERE status = $1 LIMIT 1' INTO query_result USING 'scheduled';
        RAISE NOTICE '‚úÖ 7.3. Requ√™te therapy_sessions.status - OK';
    EXCEPTION WHEN OTHERS THEN
        RAISE NOTICE '‚ùå 7.3. Erreur therapy_sessions: %', SQLERRM;
    END;
END $$;

-- 8. V√©rification des politiques RLS
DO $$
BEGIN
    IF EXISTS (
        SELECT 1 FROM pg_policies 
        WHERE schemaname = 'public' 
        AND tablename IN ('user_profiles', 'therapy_programs', 'therapy_sessions')
    ) THEN
        RAISE NOTICE '‚úÖ 8. Politiques RLS d√©tect√©es - OK';
    ELSE
        RAISE NOTICE '‚ö†Ô∏è  8. Aucune politique RLS trouv√©e - V√©rifiez rls-policies.sql';
    END IF;
END $$;

DO $$
BEGIN
    RAISE NOTICE '==================================================';
    RAISE NOTICE 'üéâ VALIDATION DES CORRECTIONS TERMIN√âE';
    RAISE NOTICE '==================================================';
    RAISE NOTICE 'Corrections valid√©es:';
    RAISE NOTICE '‚Ä¢ ‚úÖ Colonnes align√©es avec le sch√©ma SQL';
    RAISE NOTICE '‚Ä¢ ‚úÖ Relations corrig√©es';  
    RAISE NOTICE '‚Ä¢ ‚úÖ Types de donn√©es coh√©rents';
    RAISE NOTICE '‚Ä¢ ‚úÖ Contraintes respect√©es';
    RAISE NOTICE '‚Ä¢ ‚úÖ Requ√™tes principales valid√©es';
    RAISE NOTICE '==================================================';
    RAISE NOTICE 'üöÄ L''application est pr√™te !';
    RAISE NOTICE 'Navigation vers http://localhost:5174/';
    RAISE NOTICE '==================================================';
END $$;

ROLLBACK; -- Ne pas modifier la base de donn√©es, juste tester